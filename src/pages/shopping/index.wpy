<style lang="less">
@import '../../assets/styles/index.wxss';
</style>

<template>
  <view height="100%" wx:if="{{loadComplete}}">
    <!-- 头部 -->
    <header :storeInfo.sync="storeInfo" :storeDetail.sync="storeDetail" :imgUrl.sync="imgUrl" componentId="indexHeader"></header>

    <!-- 轮播图 -->
    <swiper :turnsInfo.sync="turnsInfo" :imgDomain.sync="img_domain" componentId="indexSwiper"></swiper>

    <!-- 分类 -->
    <category :categoryList.sync="categoryArr" :imgUrl.sync="imgUrl" componentId="indexSwiper"></category>

    <!-- 店主精选 -->
    <shoperChosen wx:if="{{storeInfo}}" :storeInfo.sync="storeInfo" :shoperGoods.sync="shopperChoose" :imgUrl.sync="imgUrl" :imgDomain.sync="img_domain" componentId="shoperChosen"></shoperChosen>

    <!-- 消费商专区 -->
    <coustomerGoods :sevenActive.sync="sevenActive" :img_domain.sync="img_domain" :loadComplete.sync="loadComplete"></coustomerGoods>
    
    <!-- 今日特卖 -->
    <specialSale :active.sync="active" :imgDomain.sync="img_domain" componentId="specialSale"></specialSale>

    <!-- 今日精选 -->
    <todaySpecial :special.sync="special" :imgUrl.sync="imgUrl" :imgDomain.sync="img_domain" componentId="tadaySpecial"></todaySpecial>

    <!-- 个性推荐 -->
    <recommendSale :recommendList.sync="recommendList" :imgUrl.sync="imgUrl" :imgDomain.sync="img_domain" :recommendListShow.sync="recommendListShow" :catId.sync="catId" :pageNum.sync="pageNum" :isCollect.sync="isCollect" componentId="recommendSale"></recommendSale>
  </view>
</template>

<script>
import wepy from 'wepy'
import header from '../../components/index-header'
import swiper from '../../components/index-swiper'
import category from '../../components/index-category'
import shoperChosen from '../../components/shoper-chosen'
import todaySpecial from '../../components/today-special'
import recommendSale from '../../components/recommend-sale'
import specialSale from '../../components/special-sale'
import coustomerGoods from '../../components/coustomer-goods'

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: ''
  }
  components = {
    header,
    swiper,
    category,
    shoperChosen,
    todaySpecial,
    recommendSale,
    specialSale,
    coustomerGoods
  }
  data = {
    imgUrl: '',
    goods_list: [],
    active: [],
    add_new_list: [],
    composeFloorArr: [],
    storeInfo: null,
    storeDetail: null,
    loadComplete: false,
    flashSaleArr: [], // 限时特卖
    limitEle: {}, // 当前限时特卖状态
    fa_limit: {}, // 限时特卖
    toView: null, // 限时特卖滑动菜单滚动到指定子元素
    special: null,
    new_daily: {}, // 每日上新
    allDayHot: {},
    shopperChoose: [], // 店主精选
    avaterImg: '', // 头像
    sevenActive: {},
    turnsInfo: [],
    scroll_top: 0,
    recommendList: [], // 个性推荐总转载
    recommendListShow: [], // 要展示的个性推荐数据
    catId: [],            // 本次加载分类列表id
    pageNum: 0,            // 个性推荐页码
    showLoading: false,
    img_domain: null,
    isCollect: false,
    categoryArr: [], // 分类
    qrShareShow: false,
    myAuctionNum: null, // 用户拍卖获拍未付款的商品数量
    popShow: false, // 新信息弹窗是否显示
    ptList: [], // 拼团商品列表
    ptTotalNum: null, // 参与拼团人数
    groupGoodsNumber: 0, // 拼团商品数量
    currentPageRoute: null,
    showQuickIcon: 'default'  // 快捷按钮是否打开
  }

  computed = {}

  methods = {}

  onLoad() {}

  onShow() {
    this.imgUrl = this.$parent.globalData.imgUrl
    this.$apply()
    // 加载数据
    this.loadData()
    this.loadRecommend()
  }

  loadData() {
    let self = this
    self.shopLink = 'pages/shopping/index'
    self.shopLinkParam = wepy.getStorageSync('sellerId') ? `?s=${wepy.getStorageSync('sellerId')}` : ''
    self.$apply()
    // 获取分类菜单
    wepy.request({
      url: `${self.$parent.globalData.apiUrl}/get_category.php`
    }).then(({data: {errcode, data, msg}}) => {
      console.log('分类菜单', errcode, data, msg)
      let self = this
      if (errcode === 0) {
        // 组装菜单
        for (let m of data.parent_cat) {
          // 组装菜单
          self.data.categoryArr.push({id: m.cat_id, name: m.cat_name, img: data.img_domain + m.cat_icon})
        }
      } else {
        console.error(msg)
      }
    }).catch((error) => {
      console.log('获取分类菜单失败！', error)
    })
    // 获取首页数据
    wepy.request({
      url: `${self.$parent.globalData.apiUrl}/store_index.php`,
      data: {
        uid: wepy.getStorageSync('sellerId')
      }
    }).then(({data: {errcode, data, msg}}) => {
      console.log('首页数据', errcode, data, msg)
      // 设置数据
      self.$apply(() => {
        self.active = data.active
        self.add_new_list = data.add_new_list
        self.turnsInfo = data.turns_info
        self.img_domain = data.img_domain
        self.storeInfo = data.storeinfo
        self.storeDetail = data.store_detail
        // self.composeFloorArr = tempFloor
        self.loadComplete = true
        self.flashSaleArr = self.data.flashSaleArr
        self.limitEle = self.data.limitEle
        self.fa_limit = self.data.fa_limit
        self.special = data.special
        self.new_daily = self.data.new_daily
        self.allDayHot = data.hot_list
        self.shopperChoose = data.shop_best_goods
        self.sellerIdTemp = wepy.getStorageSync('sellerId')
        self.ptList = data.pt_list
        self.ptTotalNum = data.pt_total_num
        self.special = data.special
        // self.groupGoodsNumber = groupGoodsNumber
      })
    }).catch((error) => {
      console.log('获取首页数据失败！', error)
    })
    // 消费商专区
    wepy.request({
      url: `${self.$parent.globalData.apiUrl}/distribution.php?act=banner`
    }).then(({data: {errcode, data, msg}}) => {
      if (errcode === 0) {
        self.sevenActive = data
        self.$apply()
      } else {
        console.error(msg)
      }
    }).catch((error) => {
      console.log('获取消费商数据失败！', error)
    })
  }
  // 个性推荐
  loadRecommend() {
    let self = this
    wepy.request({
      url: `${self.$parent.globalData.apiUrl}/store_index.php?step=get_category_goods`,
      method: 'POST',
      header: { 'Content-Type': 'application/x-www-form-urlencoded' },
      data: {
        rec_cat_id: self.data.catId,
        page: self.data.pageNum
      }
    }).then(({data: {errcode, data, msg}}) => {
      console.log('个性推荐', errcode, data, msg)
      if (errcode === 0) {
        let list = this.data.recommendListShow
        let recList = this.data.recommendList
        list.push(data.rec_goods_list_test_yy[0])
        for (var i = 0; i < data.rec_goods_list_test_yy.length; i++) {
          recList.push(data.rec_goods_list_test_yy[i])
        }
        self.$apply(() => {
          self.catId = data.cat_id
          self.recommendListShow = list
          self.recommendList = recList
        })
      } else {
        console.error(msg)
      }
    }).catch((error) => {
      console.log('获取分类菜单失败！', error)
    })
  }
  // 加载更多个性推荐
  onReachBottom() {
    let self = this
    // Do something when page reach bottom.
    let index = this.data.recommendListShow.length
    if (index < this.data.recommendList.length) {
      let listMore = this.data.recommendListShow
      listMore.push(this.data.recommendList[index])
      self.$apply()
    } else {
      let num = this.data.pageNum++
      self.$apply(() => {
        self.pageNum = num
        self.hidden = false
      })
      self.loadRecommend()
    }
  }
}
</script>
